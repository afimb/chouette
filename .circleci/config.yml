version: 2
aliases:
  - &GCP-auth
    name: GCP Authenticate
    command: |
      echo 'export GCLOUD_SERVICE_KEY="$GCLOUD_SERVICE_KEY"' >> $BASH_ENV
      /tools/gcp_authenticate.sh
  - &docker-login
    name: Docker login
    command: |
      docker login -u _json_key --password-stdin https://eu.gcr.io <<< "${DOCKER_PASSWORD}"
  - &tag-git-version
    name: Tag git commit with build version and push to github
    command: |
      git config --global user.email "circleci@entur.no"
      git config --global user.name "circleci"
      git tag $VERSION
      git push origin $VERSION
  - &create-image-version
    name: Create new image version and store to env var and as file in workspace
    command: |
      echo "export VERSION=$CIRCLE_BRANCH-v$CIRCLE_BUILD_NUM-$(echo -n $CIRCLE_SHA1 | tail -c 8)"  >> $BASH_ENV
      echo "$CIRCLE_BRANCH-v$CIRCLE_BUILD_NUM-$(echo -n $CIRCLE_SHA1 | tail -c 8)" > version
  - &read-image-version
    name: Read new image version from workspace
    command: |
      echo "export VERSION=$(cat ./version)" >> $BASH_ENV
  - &docker-build-and-push
    name: Docker build and push
    command: |
      IMAGE="eu.gcr.io/entur-system-1287/${CIRCLE_PROJECT_REPONAME}"
      echo "Image: ${IMAGE}"
      docker build -t $IMAGE .
      docker tag $IMAGE "${IMAGE}":"${VERSION}"
      docker push $IMAGE

  - &sonar-scan
    name: Sonar scan
    command: |
      mvn -Psonar -s /tools/m2/settings.xml \
        sonar:sonar \
        -Dsonar.projectKey=entur_${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.organization=${SONAR_ORG} \
        -Dsonar.projectName=${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${ENTUR_SONAR_PASSWORD}

jobs:
  build:
    docker:
      - image: eu.gcr.io/entur-system-1287/circleci-toolbox-image
        auth:
          username: _json_key
          password: $DOCKER_PASSWORD
      - image: mdillon/postgis:9.6
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_PASSWORD
        environment:
          TZ: Europe/Oslo
          POSTGRES_DB: chouette_test
          POSTGRES_USER: chouette
          POSTGRES_PASSWORD: chouette
    environment:
      MAVEN_OPTS: -Xmx2G
      _JAVA_OPTIONS: -Xmx2G
    steps:
      - checkout
      - restore_cache:
          key: dep-cache-{{ checksum "pom.xml" }}
      # Cannot use go offline and -o because of snapshot dependencies.
      - run: mvn -DskipWildfly -DskipDelombok -B -q clean install -s /tools/m2/settings.xml
      - save_cache:
          paths:
            - ~/.m2
          key: dep-cache-{{ checksum "pom.xml" }}
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - run: *create-image-version
      - run: *tag-git-version
      - persist_to_workspace:
          root: ~/project
          paths:
            - target
            - pom.xml
            - version
            - .circleci
            - Dockerfile
            - docker
            - mobi.chouette.command
            - mobi.chouette.common
            - mobi.chouette.dao
            - mobi.chouette.dao.iev
            - mobi.chouette.exchange
            - mobi.chouette.exchange.converter
            - mobi.chouette.exchange.geojson
            - mobi.chouette.exchange.gtfs
            - mobi.chouette.exchange.hub
            - mobi.chouette.exchange.kml
            - mobi.chouette.exchange.neptune
            - mobi.chouette.exchange.netex
            - mobi.chouette.exchange.netexprofile
            - mobi.chouette.exchange.regtopp
            - mobi.chouette.exchange.sig
            - mobi.chouette.exchange.stopplace
            - mobi.chouette.exchange.transfer
            - mobi.chouette.exchange.validator
            - mobi.chouette.iml
            - mobi.chouette.model
            - mobi.chouette.model.iev
            - mobi.chouette.persistence.hibernate
            - mobi.chouette.schema.checker
            - mobi.chouette.service
            - mobi.chouette.ws
            - chouette_iev

  sonar:
    docker:
      - image: eu.gcr.io/entur-system-1287/circleci-toolbox-image-java11
        auth:
          username: _json_key
          password: $DOCKER_PASSWORD
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
      - checkout
      - restore_cache:
          key: dep-cache-{{ checksum "pom.xml" }}
      - attach_workspace:
          at: ~/project
      - run: *sonar-scan

  deploy-docker:
    docker:
      - image: eu.gcr.io/entur-system-1287/circleci-toolbox-image-java11
        auth:
          username: _json_key
          password: $DOCKER_PASSWORD
    environment:
      DEBIAN_FRONTEND: "noninteractive"
    steps:
      - attach_workspace:
          at: ~/project
      - setup_remote_docker:
          docker_layer_caching: true
      - run: *GCP-auth
      - run: *docker-login
      - run: *read-image-version
      - run: *docker-build-and-push

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          context:
            - org-carbon
            - global
      - sonar:
          context: org-carbon
          requires:
            - build
      - deploy-docker:
          context: global
          requires:
            - sonar
          filters:
            branches:
              only: rutebanken_develop
